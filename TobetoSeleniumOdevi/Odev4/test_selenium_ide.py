# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from constants.globalConstants import *

class TestDefaultSuite():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_validlogin(self):
    self.driver.get("https://www.saucedemo.com/")
    self.driver.set_window_size(1936, 1048)
    self.driver.find_element(By.CSS_SELECTOR, username).click()
    self.driver.find_element(By.CSS_SELECTOR, username).send_keys("standard_user")
    self.driver.find_element(By.CSS_SELECTOR, password).click()
    self.driver.find_element(By.CSS_SELECTOR, password).send_keys("secret_sauce")
    self.driver.find_element(By.CSS_SELECTOR, loginButton).click()
    self.driver.find_element(By.CSS_SELECTOR, appLogo).click()
    assert self.driver.find_element(By.CSS_SELECTOR, appLogo).text == verifyLogo
  
  def test_addtocard(self):
    self.driver.get("https://www.saucedemo.com/")
    self.driver.set_window_size(1936, 1048)
    self.driver.find_element(By.CSS_SELECTOR, username).click()
    self.driver.find_element(By.CSS_SELECTOR, username).send_keys("standard_user")
    self.driver.find_element(By.CSS_SELECTOR, password).click()
    self.driver.find_element(By.CSS_SELECTOR, password).send_keys("secret_sauce")
    self.driver.find_element(By.CSS_SELECTOR, loginButton).click()
    self.driver.find_element(By.CSS_SELECTOR, addProduct1).click()
    self.driver.find_element(By.CSS_SELECTOR, addProduct2).click()
    self.driver.find_element(By.CSS_SELECTOR, shoppingCardLink).click()
    assert self.driver.find_element(By.CSS_SELECTOR, verifyProduct1).text == verifyProduct1_text
    assert self.driver.find_element(By.CSS_SELECTOR, verifyProduct2).text == verifyProduct2_text
  
  def test_emptycheckoutinfo(self):
    self.driver.get("https://www.saucedemo.com/")
    self.driver.set_window_size(1920, 1032)
    self.driver.find_element(By.CSS_SELECTOR, username).click()
    self.driver.find_element(By.CSS_SELECTOR, username).click()
    element = self.driver.find_element(By.CSS_SELECTOR, username)
    actions = ActionChains(self.driver)
    actions.double_click(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, username).send_keys("standard_user")
    self.driver.find_element(By.CSS_SELECTOR, password).click()
    self.driver.find_element(By.CSS_SELECTOR, password).send_keys("secret_sauce")
    self.driver.find_element(By.CSS_SELECTOR, loginButton).click()
    self.driver.find_element(By.CSS_SELECTOR, addProduct1).click()
    self.driver.find_element(By.CSS_SELECTOR, addProduct2).click()
    self.driver.find_element(By.CSS_SELECTOR, shoppingCardLink).click()
    self.driver.find_element(By.CSS_SELECTOR, checkOut).click()
    self.driver.find_element(By.CSS_SELECTOR, checkOutContinue).click()
    self.driver.find_element(By.CSS_SELECTOR, checkOutError).click()
    assert self.driver.find_element(By.CSS_SELECTOR, checkOutError).text == checkOutError_text
  
  def test_emptylogin(self):
    self.driver.get("https://www.saucedemo.com/")
    self.driver.set_window_size(1936, 1048)
    self.driver.find_element(By.CSS_SELECTOR, username).click()
    self.driver.find_element(By.CSS_SELECTOR, password).click()
    self.driver.find_element(By.CSS_SELECTOR, loginButton).click()
    self.driver.find_element(By.CSS_SELECTOR, loginError).click()
    assert self.driver.find_element(By.CSS_SELECTOR, loginError).text == emptyUsernameloginErrorMessage
  
  def test_emptypasslogin(self):
    self.driver.get("https://www.saucedemo.com/")
    self.driver.set_window_size(1936, 1048)
    self.driver.find_element(By.CSS_SELECTOR, username).click()
    self.driver.find_element(By.CSS_SELECTOR, username).send_keys("standard_user")
    self.driver.find_element(By.CSS_SELECTOR, password).click()
    self.driver.find_element(By.CSS_SELECTOR, loginButton).click()
    self.driver.find_element(By.CSS_SELECTOR, loginError).click()
    element = self.driver.find_element(By.CSS_SELECTOR, loginError)
    actions = ActionChains(self.driver)
    actions.double_click(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, loginError).click()
    assert self.driver.find_element(By.CSS_SELECTOR, loginError).text == emptyPasswordloginErrorMessage
  
  def test_invalidlogin(self):
    self.driver.get("https://www.saucedemo.com/")
    self.driver.set_window_size(1936, 1048)
    self.driver.find_element(By.CSS_SELECTOR, username).click()
    self.driver.find_element(By.CSS_SELECTOR, username).send_keys("1")
    self.driver.find_element(By.CSS_SELECTOR, password).click()
    self.driver.find_element(By.CSS_SELECTOR, password).send_keys("1")
    self.driver.find_element(By.CSS_SELECTOR, loginButton).click()
    self.driver.find_element(By.CSS_SELECTOR, loginError).click()
    assert self.driver.find_element(By.CSS_SELECTOR, loginError).text == wrongUserPassloginErrorMessage
  
  def test_lockeduser(self):
    self.driver.get("https://www.saucedemo.com/")
    self.driver.set_window_size(1936, 1048)
    self.driver.find_element(By.CSS_SELECTOR, username).click()
    self.driver.find_element(By.CSS_SELECTOR, username).send_keys("locked_out_user")
    self.driver.find_element(By.CSS_SELECTOR, password).click()
    self.driver.find_element(By.CSS_SELECTOR, password).send_keys("secret_sauce")
    self.driver.find_element(By.CSS_SELECTOR, loginButton).click()
    self.driver.find_element(By.CSS_SELECTOR, loginError).click()
    assert self.driver.find_element(By.CSS_SELECTOR, loginError).text == lockedLoginErrorMessage
  
  def test_removefromcard(self):
    self.driver.get("https://www.saucedemo.com/")
    self.driver.set_window_size(1936, 1048)
    self.driver.find_element(By.CSS_SELECTOR, username).click()
    self.driver.find_element(By.CSS_SELECTOR, username).send_keys("standard_user")
    self.driver.find_element(By.CSS_SELECTOR, password).click()
    self.driver.find_element(By.CSS_SELECTOR, password).send_keys("secret_sauce")
    self.driver.find_element(By.CSS_SELECTOR, loginButton).click()
    self.driver.find_element(By.CSS_SELECTOR, addProduct1).click()
    self.driver.find_element(By.CSS_SELECTOR, addProduct2).click()
    self.driver.find_element(By.CSS_SELECTOR, shoppingCardLink).click()
    self.driver.find_element(By.CSS_SELECTOR, removeProduct1).click()
    self.driver.find_element(By.CSS_SELECTOR, removeProduct2).click()
  
